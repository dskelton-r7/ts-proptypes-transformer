// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transformer transforms TypeScript interfaces to PropTypes declarations on emitted code 1`] = `
"import * as ___PropTypes from \\"prop-types\\";
import * as React from 'react';
export var TestEnum;
(function (TestEnum) {
    TestEnum[TestEnum[\\"one\\"] = 0] = \\"one\\";
    TestEnum[TestEnum[\\"two\\"] = 1] = \\"two\\";
    TestEnum[TestEnum[\\"three\\"] = 2] = \\"three\\";
})(TestEnum || (TestEnum = {}));
export class TestComponent extends React.Component {
}
TestComponent.propTypes = {
    numberProp: ___PropTypes.number.isRequired,
    boolProp: ___PropTypes.bool.isRequired,
    arrayProp: ___PropTypes.array.isRequired,
    genericArrayProp: ___PropTypes.array.isRequired,
    optionalProp: ___PropTypes.bool,
    commentedProp: ___PropTypes.array.isRequired,
    union: ___PropTypes.array.isRequired,
    interfaceValue: ___PropTypes.shape({
        firstName: ___PropTypes.array.isRequired
    }).isRequired,
    intersecton: ___PropTypes.any.isRequired,
    intersectonAlias: ___PropTypes.any.isRequired,
    partialIntersectionAlias: ___PropTypes.any.isRequired,
    enum: ___PropTypes.any.isRequired,
    id: ___PropTypes.number.isRequired
};
export class AlreadyHasAStaticPropTypes extends React.Component {
}
AlreadyHasAStaticPropTypes.propTypes = {};
export class NotAComponentClass {
}
export class GenericPropsTestComponent extends React.Component {
}
GenericPropsTestComponent.propTypes = ___PropTypes.any;
export class GenericPropsTestComponent2 extends React.Component {
}
GenericPropsTestComponent2.propTypes = ___PropTypes.any;
export class GenericPropsTestComponent3 extends React.Component {
}
GenericPropsTestComponent3.propTypes = ___PropTypes.any;
export class GenericPropsTestComponent4 extends React.Component {
}
GenericPropsTestComponent4.propTypes = ___PropTypes.any;
export class GenericPropsTestComponent5 extends React.Component {
}
GenericPropsTestComponent5.propTypes = ___PropTypes.any;
export class GenericPropsTestComponent6 extends GenericPropsTestComponent5 {
}
GenericPropsTestComponent6.propTypes = ___PropTypes.any;
export class AnyPropsComponent extends React.Component {
}
AnyPropsComponent.propTypes = ___PropTypes.any;
export const StatelessFunctionalTestComponent = (p) => {
    return <AnyPropsComponent {...p}/>;
};
StatelessFunctionalTestComponent.propTypes = {
    numberProp: ___PropTypes.number.isRequired,
    boolProp: ___PropTypes.bool.isRequired,
    arrayProp: ___PropTypes.array.isRequired,
    genericArrayProp: ___PropTypes.array.isRequired,
    optionalProp: ___PropTypes.bool,
    commentedProp: ___PropTypes.array.isRequired,
    union: ___PropTypes.array.isRequired,
    interfaceValue: ___PropTypes.shape({
        firstName: ___PropTypes.array.isRequired
    }).isRequired,
    intersecton: ___PropTypes.any.isRequired,
    intersectonAlias: ___PropTypes.any.isRequired,
    partialIntersectionAlias: ___PropTypes.any.isRequired,
    enum: ___PropTypes.any.isRequired,
    id: ___PropTypes.number.isRequired
};
export const InferrableStatelessFunctionalTestComponent = (p) => {
    return <StatelessFunctionalTestComponent {...p}/>;
};
export function DeclaredFunctionTestComponent(p) {
    return <StatelessFunctionalTestComponent {...p}/>;
}
"
`;
